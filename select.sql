SELECT * FROM COURSES;
SELECT * FROM COURSE_OFFERING;
SELECT * FROM PREREQUISITE;
SELECT * FROM Student;
SELECT * FROM Admins;
SELECT * FROM CREDITMAP;
SELECT * FROM STUDENTCREDIT;
SELECT * FROM GRADEMAP;
SELECT * FROM ENROLLMENT;
SELECT * FROM VARIABLE_CEDIT_COURSES;
SELECT * FROM STUDENTBILL;
SELECT * FROM ENROLLMENT;
SELECT * FROM SPECIAL_PERMISSION;
SELECT * FROM WAITLIST;
SELECT * FROM STUDENT;
SELECT * FROM VARIABLE_CEDIT_COURSES;



DELETE STUDENTBILL;

UPDATE COURSES SET COURSE_NAME = 'VLSI II' WHERE COURSE_ID = 'CS421' ;

INSERT INTO PREREQUISITE VALUES('CS402', 'CS401', 'C', '2');

INSERT INTO SPECIAL_PERMISSION VALUES(111, 'cs303', 'Dr. X', 'FALL', 'Pending', '', '');

UPDATE COURSES SET GPA_REQ = 3.5 where course_id = 'CS521';
DELETE COURSE_OFFERING;
DELETE STUDENT;
UPDATE Student set residency_class = 'Out-State' where Student_id = 103;
UPDATE STUDENTCREDIT SET current_credit = 0 where student_id = 101;
DELETE FROM STUDENT WHERE Student_id = 233;

Select * From Prerequisite where COURSE_ID = 'CS421';
Select * from Enrollment where Semester = 'FALL' and Student_id = 101 and Course_id = 'CE420';

DELETE FROM STUDENTCREDIT WHERE Student_id = 111;

SELECT * FROM COURSE_OFFERING WHERE SEMESTER = 'SPRING' and (NUMBER_OF_ENROLLED < CLASS_SIZE or WAITLISTED < WAITLIST_SIZE);
DELETE FROM COURSE_OFFERING WHERE SEMESTER = 'SPRING' and COURSE_ID = 'CS525';
ALTER TABLE COURSE_OFFERING
ADD WAITLISTED INT DEFAULT 0;

DELETE FROM ENROLLMENT WHERE student_id = 102 and course_id = 'CS505';
UPDATE COURSE_OFFERING SET START_TIME = '+00 14:30:00.000000' where SEMESTER = 'SPRING' and course_id = 'CS525';

ALTER TABLE COURSES DROP COLUMN GPA_REQ;
ALTER TABLE COURSES ADD GPA_REQ DECIMAL(3, 2) DEFAULT 0;
DELETE FROM COURSES WHERE COURSe_ID = 't';
UPDATE STUDENTCREDIT SET CURRENT_CREDIT = 12 WHERE STUDENT_ID = 101;

UPDATE COURSE_OFFERING SET NUMBER_OF_ENROLLED = 2, WAITLISTED = 2 where course_id = 'CS505';

ALTER TABLE STUDENTCREDIT ADD CREDIT_COST INT DEFAULT 0;
UPDATE STUDENTCREDIT SET CREDIT_COST = 1000 where student_id = 104;



CREATE OR REPLACE TRIGGER enrollment_trigger
AFTER INSERT ON ENROLLMENT
FOR EACH ROW
DECLARE TEMP1 INT;
BEGIN
UPDATE STUDENTCREDIT SET CURRENT_CREDIT = CURRENT_CREDIT + :new.credit 
  where STUDENT_ID = :new.STUDENT_ID;
SELECT CREDIT_COST INTO TEMP1 FROM STUDENTCREDIT WHERE STUDENT_ID = :new.STUDENT_ID;
UPDATE STUDENTBILL SET TOTAL_AMOUNT =TOTAL_AMOUNT + (TEMP1*:new.credit) WHERE STUDENT_ID = :new.STUDENT_ID;
UPDATE COURSE_OFFERING SET NUMBER_OF_ENROLLED = NUMBER_OF_ENROLLED + 1 where course_id = :new.course_id and Semester = 'SPRING';
END;
/


CREATE OR REPLACE TRIGGER waitlist_trigger
AFTER INSERT ON WAITLIST
FOR EACH ROW
BEGIN
UPDATE COURSE_OFFERING SET WAITLISTED = WAITLISTED + 1 where course_id = :new.course_id and Semester = 'SPRING';
END;
/

INSERT INTO ENROLLMENT VALUES(104, 'CS510', 'Dr. AA', 'SPRING','F',3);

SELECT COURSE_ID FROM ENROLLMENT WHERE STUDENT_ID = 101 and semester = 'SPRING'
UNION ALL
SELECT COURSE_ID FROM WAITLIST WHERE STUDENT_ID = 101 and semester = 'SPRING';
ALTER TABLE WAITLIST ADD DROP_COURSE VARCHAR(10);

SELECT * FROM (SELECT COURSE_ID FROM ENROLLMENT WHERE STUDENT_ID = 101 and semester = 'SPRING' UNION ALL SELECT COURSE_ID FROM WAITLIST WHERE STUDENT_ID = 101 and semester = 'SPRING');
      
      
Select * from WAITLIST WHERE STUDENT_ID = 101 and SEMESTER = 'SPRING';
Select * from ENROLLMENT WHERE STUDENT_ID = 101;

CREATE OR REPLACE TRIGGER waitlist_delete_trigger
AFTER DELETE ON WAITlIST
FOR EACH ROW
BEGIN
UPDATE COURSE_OFFERING SET WAITLISTED = WAITLISTED - 1 where course_id = :old.course_id and Semester = 'SPRING';
END;
/

CREATE OR REPLACE TRIGGER enrollment_delete_triger
AFTER DELETE ON ENROLLMENT
FOR EACH ROW
DECLARE TEMP_COST INT;
BEGIN
UPDATE COURSE_OFFERING SET NUMBER_OF_ENROLLED = NUMBER_OF_ENROLLED - 1 
      WHERE course_id = :old.course_id and Semester = 'SPRING';
UPDATE STUDENTCREDIT SET CURRENT_CREDIT = CURRENT_CREDIT - :old.CREDIT
      WHERE STUDENT_ID = :old.STUDENT_ID;
SELECT CREDIT_COST INTO TEMP_COST FROM STUDENTCREDIT WHERE STUDENT_ID = :old.student_id;
UPDATE STUDENTBILL SET TOTAL_AMOUNT = TOTAL_AMOUNT - (TEMP_COST * :old.CREDIT)
      WHERE STUDENT_ID = :old.STUDENT_ID;
END;
/

CREATE OR REPLACE TRIGGER CALCULATE_GPA_TRIGGER
AFTER UPDATE ON ENROLLMENT
FOR EACH ROW
DECLARE
GPA1 DECIMAL(3,2);
BEGIN
SELECT SUM(EE.CREDIT * GM.NUMBER_GRADE)/SUM(EE.CREDIT) INTO GPA1 FROM ENROLLMENT EE, GRADEMAP GM
WHERE GM.LETTER_GRADE = EE.LETTER_GRADE and EE.STUDENT_ID = :new.STUDENT_ID;
UPDATE STUDENT SET GPA = GPA1 WHERE STUDENT_ID = :new.STUDENT_ID;
END;
/

CREATE OR REPLACE PROCEDURE calgpa(sid INT) 
AS
gpa1 DECIMAL(3,2);
BEGIN

SELECT SUM(EE.CREDIT * GM.NUMBER_GRADE)/SUM(EE.CREDIT) INTO gpa1 FROM ENROLLMENT EE, GRADEMAP GM
WHERE GM.LETTER_GRADE = EE.LETTER_GRADE and EE.STUDENT_ID = sid;

UPDATE STUDENT SET GPA = gpa1 WHERE STUDENT_ID = sid;
END;
/

exec calgpa (sid=>101);

DELETE FROM WAITLIST WHERE STUDENT_ID = 101;





UPDATE SPECIAL_PERMISSION SET APPROVAL_STATUS = 'Approved', ADMIN_NAME = 'aaa', DATE_OF_APPROVAL = TO_DATE('1994-03-21','YYYY-MM-DD') 
WHERE STUDENT_ID = 101 and COURSE_ID = 'CS525' and SEMESTER = 'SPRING' and FACULTY = 'DR. MX';

      